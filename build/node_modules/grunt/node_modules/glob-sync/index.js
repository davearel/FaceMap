var fs = require("fs");
var path = require("path");
var minimatch = require("minimatch");

exports.globSync = function(glob, options) {
  var files = [];

  // Create a regular expression from the glob
  var regex = minimatch.makeRe(glob); 

  // Find the root path to start
  var root = glob.split("*").shift().split("/").shift() || "./";

  // If no options specified, default to empty object
  options = options || {};

  function recurseDirectory(root) {
    var dir = fs.readdirSync(root);

    // Iterate over all found files in the directory
    dir.forEach(function(file) {
      file = root + "/" + file;

      var stat = fs.statSync(file);

      // Recurse if found a new directory
      if (fs.statSync(file).isDirectory()) {
        recurseDirectory(file);
      // Otherwise, add to array
      } else {
        files.push(file);
      }
    });
  }

  // Start recursing from the root
  recurseDirectory(root);

  // Use @isaacs minimatch library to create a match of all the globs
  return minimatch.match(files, glob, options);
};
